for (i in range_num) {
unmarked_num <- as.numeric(range_num*(as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)
}
print(unmarked)
print(range_num)
return(unmarked*range)
}
sieve(12)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numeric(range_num*(as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
range
range <- c(2:12)
range
unmarked <- as.numeric(as.logical(range))
unmarked
unmarked2 <- gsub(pattern = 0, replacement = NA, unmarked
)
unmarked2
unmarked2 <- as.numeric(unmarked2)
unmarked2
range*unmarked2
range*unmarked2 %% i != 0
range*unmarked2 %% 2 != 0
(range*unmarked2) %% 2 != 0
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
unmarked
range
unmarked_num <- unmarked
range_num <- range
as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% 2 != 0)
unmarked_num <- as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)
unmarked_num <- as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% 2 != 0)
unmarked_num
as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% 3 != 0)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num)) %% i != 0))
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numeric(((range_num*unmarked_num)) %% i != 0)
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- gsub(pattern = 0, replacement = NA, as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0))
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numberic(gsub(pattern = 0, replacement = NA, as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)))
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numeric(gsub(pattern = 0, replacement = NA, as.numeric((range_num*as.numeric(gsub(pattern = 0, replacement = NA, unmarked_num))) %% i != 0)))
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
siev(12)
sieve(12)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
range_num <- c(2:limit)
unmarked_num <- as.numeric(as.logical(range_num))
for (i in range_num) {
unmarked_num <- as.numeric(gsub(pattern = 0, replacement = NA, ((range_num*unmarked_num) %% i != 0)))
}
print(unmarked_num)
print(range_num)
return(unmarked_num*range_num)
}
sieve(12)
range_num <- c(2:12)
unmarked_num <- as.numeric(as.logical(range_num))
range_num
unmarked_num
((range_num*unmarked_num) %% i != 0)
((range_num*unmarked_num) %% 2 != 0)
as.numeric(((range_num*unmarked_num) %% 2 != 0))
as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% i != 0))))
as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% 2 != 0))))
unmarked_num <- as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% 2 != 0))))
unmarked_num
as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% 3 != 0))))
unmarked_num <- as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% 3 != 0))))
unmarked_num
as.numeric(gsub(pattern = 0, replacement = NA, as.numeric(((range_num*unmarked_num) %% 4 != 0))))
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
help(any)
prime_num <- c()
prime_num
help(seq)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == 1)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0], i)
}
}
return(prime_num)
}
sieve(12)
seq(2,12)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
composite_num = c()
for (i in seq(2,limit)) {
if (any(range == 1)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0], i)
}
else {
composite_num <- c(composite_num, i)
}
}
print(prime_num)
print(composite_num)
}
sieve(12)
test <- c()
test
test <- c(test, 2)
test
help(c
)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0], i)
}
}
print(prime_num)
}
sieve(12)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
test2 <- seq(1,12)
test2
any(range == 2)
any(test2 == 2)
c(test2[(test2 %% 2) != 0], 2)
c(test2[(test2 %% 3) != 0], 3)
test <- 1:12
test
c(test[(test %% 2) != 0], 2)
test
c(test[(test %% 2) != 0])
c(test[(test %% 2)])
2 %% 2
1 %% 2
c(test[(test %% 2) != 0], 2)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(12)
sieve(452)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0], i)
}
}
print(prime_num)
}
sieve(454)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(12)
sieve(1000)
answer <- c(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,
59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113,
127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181,
191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,
257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,
331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,
401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,
467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,
563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619,
631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,
709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787,
797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,
877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953,
967, 971, 977, 983, 991, 997)
answer
sieve(1000) == answer
sieve(1)
sieve(1)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
prime_num <- c()
prime_num
seq(2,1)
sieve <- function(limit) {
range <- seq(2,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(1)
sieve(12)
seq(2,2)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(limit+1,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(12)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
help(seq)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in 2:limit) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(12)
sieve(1)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(12)
sieve(1000) == answer
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
stopifnot(limit > 1)
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(1)
sieve(-1)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
stopifnot(limit > 1) {prime_num}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
help(stopifnot)
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
stopifnot(limit > 1) {
prime_num
}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
stopifnot(limit > 1) {
return(prime_num)
}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
stopifnot(limit > 0)
range <- seq(1,limit)
prime_num <- c()
if (limit = 1) {
return(prime_num)
}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve <- function(limit) {
stopifnot(limit > 0)
range <- seq(1,limit)
prime_num <- c()
if (limit = 1) {
print(prime_num)
}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve <- function(limit) {
stopifnot(limit > 0)
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (limit = 1) {
print(prime_num)
}
else if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve <- function(limit) {
stopifnot(limit > 0)
range <- seq(1,limit)
prime_num <- c()
for (i in seq(2,limit)) {
if (limit == 1) {
print(prime_num)
}
else if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
print(prime_num)
}
sieve(1)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
sieve <- function(limit) {
range <- seq(1,limit)
prime_num <- c()
if (limit < 2) {
return(prime_num)
}
for (i in seq(2,limit)) {
if (any(range == i)) {
prime_num <- c(prime_num, i)
range <- c(range[(range %% i) != 0])
}
}
return(prime_num)
}
sieve(12)
sieve(1)
sieve(-122121)
source("C:/Users/John Antolik/Exercism/r/sieve/sieve.R")
source("C:/Users/John Antolik/Exercism/r/collatz-conjecture/collatz-conjecture.R")
source("C:/Users/John Antolik/Exercism/r/collatz-conjecture/collatz-conjecture.R")
source("C:/Users/John Antolik/Exercism/r/collatz-conjecture/collatz-conjecture.R")
source("C:/Users/John Antolik/Exercism/r/collatz-conjecture/collatz-conjecture.R")
search()
library("tidyverse")
search()
library("readr")
library("gdata")
search()
library("readxl")
search()
dir()
?file.path
source_data_path <- file.path("C:\Users\John Antolik\Bitcoin\Source Data")
blocks_source_data_path <- file.path("C:", "Users","John Antolik", "Bitcoin", "Source Data", "bitcoin_blocks-bytetree_api-07.25.21", fsep = "/")
daily_source_data_path <- file.path("C:", "Users","John Antolik", "Bitcoin", "Source Data", "bitcoin_daily-bytetree_api-07.25.21", fsep = "/")
excel_sheets(blocks_source_data_path)
?excel_sheets
read_csv(blocks_source_data_path)
blocks_source_data_path <- file.path("C:", "Users", "John Antolik", "Bitcoin", "Source Data", "bitcoin_blocks-bytetree_api-07.25.21", fsep = "/")
daily_source_data_path <- file.path("C:", "Users", "John Antolik", "Bitcoin", "Source Data", "bitcoin_daily-bytetree_api-07.25.21", fsep = "/")
read_csv(blocks_source_data_path)
excel_sheets(daily_source_data_path)
getwd()
path <- file.path("C:", "Users", "John Antolik", fsep = "/")
path
setwd(path)
getwd
getwd()
blocks_source_data_path <- file.path("Bitcoin", "Source Data", "bitcoin_blocks-bytetree_api-07.25.21", fsep = "/")
daily_source_data_path <- file.path("Bitcoin", "Source Data", "bitcoin_daily-bytetree_api-07.25.21", fsep = "/")
read_csv(blocks_source_data_path)
blocks_source_data_path <- file.path("C:", "Users", "John Antolik", "Bitcoin", "Source Data", "bitcoin_blocks-bytetree_api-07.25.21", fsep = "/")
daily_source_data_path <- file.path("C:", "Users", "John Antolik", "Bitcoin", "Source Data", "bitcoin_daily-bytetree_api-07.25.21", fsep = "/")
read_csv(blocks_source_data_path)
?read_csv
setwd(path)
getwd
getwd()
path <- file.path("Bitcoin", "Source Data", fsep = "/")
setwd(path)
getwd()
read_csv("bitcoin_blocks-bytetree_api-07.25.21.csv")
getwd()
blocks <- read_csv("bitcoin_blocks-bytetree_api-07.25.21.csv")
daily <- read_csv("bitcoin_daily-bytetree_api-07.25.21.csv")
head(daily)
head(blocks)
